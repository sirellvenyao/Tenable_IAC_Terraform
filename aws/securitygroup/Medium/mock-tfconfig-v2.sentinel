import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"references": [
					"var.region",
				],
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
}

resources = {
	"aws_security_group.sentinel_22_added_sg": {
		"address": "aws_security_group.sentinel_22_added_sg",
		"config": {
			"description": {
				"constant_value": "sentinel_22_added_sg",
			},
			"egress": {
				"constant_value": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      null,
						"from_port":        0,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "-1",
						"security_groups":  null,
						"self":             null,
						"to_port":          0,
					},
				],
			},
			"ingress": {
				"constant_value": [
					{
						"cidr_blocks": [
							"10.3.0.0/16",
						],
						"description":      null,
						"from_port":        22,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "tcp",
						"security_groups":  null,
						"self":             true,
						"to_port":          22,
					},
				],
			},
			"name": {
				"constant_value": "sentinel_22_added_sg",
			},
			"tags": {
				"constant_value": {
					"Name":          "sentinel_22_added_sg",
					"business-line": "test",
				},
			},
			"vpc_id": {
				"references": [
					"aws_vpc.tf_vpc2.id",
					"aws_vpc.tf_vpc2",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "sentinel_22_added_sg",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_security_group",
	},
	"aws_security_group.tf_test": {
		"address": "aws_security_group.tf_test",
		"config": {
			"description": {
				"constant_value": "Common endpoints security group.",
			},
			"egress": {
				"constant_value": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      null,
						"from_port":        0,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "-1",
						"security_groups":  null,
						"self":             null,
						"to_port":          0,
					},
				],
			},
			"ingress": {
				"constant_value": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      null,
						"from_port":        22,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "tcp",
						"security_groups":  null,
						"self":             true,
						"to_port":          22,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      null,
						"from_port":        80,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "tcp",
						"security_groups":  null,
						"self":             true,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.2.0.0/16",
						],
						"description":      null,
						"from_port":        22,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "tcp",
						"security_groups":  null,
						"self":             true,
						"to_port":          22,
					},
				],
			},
			"name": {
				"constant_value": "endpoint_shared",
			},
			"tags": {
				"constant_value": {
					"Name":          "endpoint_shared",
					"business-line": "test",
				},
			},
			"vpc_id": {
				"references": [
					"aws_vpc.tf_vpc2.id",
					"aws_vpc.tf_vpc2",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "tf_test",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_security_group",
	},
	"aws_subnet.tf_a_new": {
		"address": "aws_subnet.tf_a_new",
		"config": {
			"availability_zone": {
				"constant_value": "ap-east-1c",
			},
			"cidr_block": {
				"constant_value": "10.222.11.0/24",
			},
			"map_public_ip_on_launch": {
				"constant_value": false,
			},
			"tags": {
				"constant_value": {
					"Name": "tf_a_new_one",
				},
			},
			"vpc_id": {
				"references": [
					"aws_vpc.tf_vpc2.id",
					"aws_vpc.tf_vpc2",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "tf_a_new",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"aws_subnet.tf_a_new_one": {
		"address": "aws_subnet.tf_a_new_one",
		"config": {
			"availability_zone": {
				"constant_value": "ap-east-1c",
			},
			"cidr_block": {
				"constant_value": "10.222.10.0/26",
			},
			"map_public_ip_on_launch": {
				"constant_value": false,
			},
			"tags": {
				"constant_value": {
					"Name": "tf_a_new_one",
				},
			},
			"vpc_id": {
				"references": [
					"aws_vpc.tf_vpc2.id",
					"aws_vpc.tf_vpc2",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "tf_a_new_one",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"aws_vpc.tf_vpc2": {
		"address": "aws_vpc.tf_vpc2",
		"config": {
			"cidr_block": {
				"constant_value": "10.222.0.0/16",
			},
			"enable_dns_hostnames": {
				"constant_value": true,
			},
			"enable_dns_support": {
				"constant_value": true,
			},
			"tags": {
				"constant_value": {
					"Name": "tf_test",
				},
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "tf_vpc2",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_vpc",
	},
}

provisioners = {}

variables = {
	"aws": {
		"default":        "ap-east-1",
		"description":    "",
		"module_address": "",
		"name":           "aws",
	},
	"aws_region": {
		"default":        "ap-east-1",
		"description":    "",
		"module_address": "",
		"name":           "aws_region",
	},
	"region": {
		"default":        "ap-east-1",
		"description":    "",
		"module_address": "",
		"name":           "region",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
