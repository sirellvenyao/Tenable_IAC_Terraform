import "strings"
import "types"

outputs = {}

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"aws_security_group": {
				"tf_test": {
					0: {
						"attr": {
							"arn":         "arn:aws:ec2:ap-east-1:726344936127:security-group/sg-0a4cdf7d9fcea6d49",
							"description": "Common endpoints security group.",
							"egress": [
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description":      "",
									"from_port":        0,
									"ipv6_cidr_blocks": [],
									"prefix_list_ids":  [],
									"protocol":         "-1",
									"security_groups":  [],
									"self":             false,
									"to_port":          0,
								},
							],
							"id": "sg-0a4cdf7d9fcea6d49",
							"ingress": [
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description":      "",
									"from_port":        22,
									"ipv6_cidr_blocks": [],
									"prefix_list_ids":  [],
									"protocol":         "tcp",
									"security_groups":  [],
									"self":             true,
									"to_port":          22,
								},
								{
									"cidr_blocks": [
										"10.0.0.0/16",
									],
									"description":      "",
									"from_port":        80,
									"ipv6_cidr_blocks": [],
									"prefix_list_ids":  [],
									"protocol":         "tcp",
									"security_groups":  [],
									"self":             true,
									"to_port":          80,
								},
							],
							"name":                   "endpoint_shared",
							"name_prefix":            "",
							"owner_id":               "726344936127",
							"revoke_rules_on_delete": false,
							"tags": {
								"Name":          "endpoint_shared",
								"business-line": "test",
							},
							"tags_all": {
								"Name":          "endpoint_shared",
								"business-line": "test",
							},
							"timeouts": null,
							"vpc_id":   "vpc-03076f7a654c4dbf4",
						},
						"depends_on": [
							"aws_vpc.tf_vpc2",
						],
						"id":      "sg-0a4cdf7d9fcea6d49",
						"tainted": false,
					},
				},
			},
			"aws_subnet": {
				"tf_a_new": {
					0: {
						"attr": {
							"arn": "arn:aws:ec2:ap-east-1:726344936127:subnet/subnet-03930fd6d040f7546",
							"assign_ipv6_address_on_creation":                false,
							"availability_zone":                              "ap-east-1c",
							"availability_zone_id":                           "ape1-az3",
							"cidr_block":                                     "10.222.11.0/24",
							"customer_owned_ipv4_pool":                       "",
							"enable_dns64":                                   false,
							"enable_resource_name_dns_a_record_on_launch":    false,
							"enable_resource_name_dns_aaaa_record_on_launch": false,
							"id":                                  "subnet-03930fd6d040f7546",
							"ipv6_cidr_block":                     "",
							"ipv6_cidr_block_association_id":      "",
							"ipv6_native":                         false,
							"map_customer_owned_ip_on_launch":     false,
							"map_public_ip_on_launch":             false,
							"outpost_arn":                         "",
							"owner_id":                            "726344936127",
							"private_dns_hostname_type_on_launch": "ip-name",
							"tags": {
								"Name": "tf_a_new_one",
							},
							"tags_all": {
								"Name": "tf_a_new_one",
							},
							"timeouts": null,
							"vpc_id":   "vpc-03076f7a654c4dbf4",
						},
						"depends_on": [
							"aws_vpc.tf_vpc2",
						],
						"id":      "subnet-03930fd6d040f7546",
						"tainted": false,
					},
				},
				"tf_a_new_one": {
					0: {
						"attr": {
							"arn": "arn:aws:ec2:ap-east-1:726344936127:subnet/subnet-0ed7417cc1c305e19",
							"assign_ipv6_address_on_creation":                false,
							"availability_zone":                              "ap-east-1c",
							"availability_zone_id":                           "ape1-az3",
							"cidr_block":                                     "10.222.10.0/26",
							"customer_owned_ipv4_pool":                       "",
							"enable_dns64":                                   false,
							"enable_resource_name_dns_a_record_on_launch":    false,
							"enable_resource_name_dns_aaaa_record_on_launch": false,
							"id":                                  "subnet-0ed7417cc1c305e19",
							"ipv6_cidr_block":                     "",
							"ipv6_cidr_block_association_id":      "",
							"ipv6_native":                         false,
							"map_customer_owned_ip_on_launch":     false,
							"map_public_ip_on_launch":             false,
							"outpost_arn":                         "",
							"owner_id":                            "726344936127",
							"private_dns_hostname_type_on_launch": "ip-name",
							"tags": {
								"Name": "tf_a_new_one",
							},
							"tags_all": {
								"Name": "tf_a_new_one",
							},
							"timeouts": null,
							"vpc_id":   "vpc-03076f7a654c4dbf4",
						},
						"depends_on": [
							"aws_vpc.tf_vpc2",
						],
						"id":      "subnet-0ed7417cc1c305e19",
						"tainted": false,
					},
				},
			},
			"aws_vpc": {
				"tf_vpc2": {
					0: {
						"attr": {
							"arn": "arn:aws:ec2:ap-east-1:726344936127:vpc/vpc-03076f7a654c4dbf4",
							"assign_generated_ipv6_cidr_block":     false,
							"cidr_block":                           "10.222.0.0/16",
							"default_network_acl_id":               "acl-0c698a3923aaaf5cc",
							"default_route_table_id":               "rtb-0e0c3c9f1ce2ad542",
							"default_security_group_id":            "sg-0e128cc7518218f89",
							"dhcp_options_id":                      "dopt-0260d7eca2dea367a",
							"enable_classiclink":                   false,
							"enable_classiclink_dns_support":       false,
							"enable_dns_hostnames":                 true,
							"enable_dns_support":                   true,
							"enable_network_address_usage_metrics": false,
							"id":                                   "vpc-03076f7a654c4dbf4",
							"instance_tenancy":                     "default",
							"ipv4_ipam_pool_id":                    null,
							"ipv4_netmask_length":                  null,
							"ipv6_association_id":                  "",
							"ipv6_cidr_block":                      "",
							"ipv6_cidr_block_network_border_group": "",
							"ipv6_ipam_pool_id":                    "",
							"ipv6_netmask_length":                  0,
							"main_route_table_id":                  "rtb-0e0c3c9f1ce2ad542",
							"owner_id":                             "726344936127",
							"tags": {
								"Name": "tf_test",
							},
							"tags_all": {
								"Name": "tf_test",
							},
						},
						"depends_on": [],
						"id":         "vpc-03076f7a654c4dbf4",
						"tainted":    false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "1.4.0"

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
